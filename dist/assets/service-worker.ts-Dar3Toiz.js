import{l as r}from"./utils-BvHapBx2.js";const c="stupify-simplify-text";chrome.runtime.onInstalled.addListener(e=>{r.info("Extension installed:",e.reason),e.reason==="install"?u():e.reason==="update"&&h(e.previousVersion),m()});async function u(){try{await chrome.storage.local.set({settings:{defaultComplexity:"normal",autoOpenSidePanel:!0,keyboardShortcutEnabled:!0,theme:"light"},stats:{installDate:Date.now(),totalExplanations:0,lastUsed:null},onboarding:{completed:!1,currentStep:0}}),chrome.tabs.create({url:chrome.runtime.getURL("onboarding.html")}),i("extension_installed",{version:chrome.runtime.getManifest().version}),r.info("First install setup complete")}catch(e){r.error("Failed to handle first install:",e)}}async function h(e){try{const t=chrome.runtime.getManifest().version;r.info("Extension updated:",{from:e,to:t}),i("extension_updated",{from_version:e,to_version:t}),e&&await d(e,t)}catch(t){r.error("Failed to handle update:",t)}}async function d(e,t){r.info("Running migrations:",{fromVersion:e,toVersion:t})}function m(){try{chrome.contextMenus.remove(c,()=>{chrome.runtime.lastError}),chrome.contextMenus.create({id:c,title:"Simplify with Stupify",contexts:["selection"],documentUrlPatterns:["http://*/*","https://*/*"]}),r.info("Context menu created")}catch(e){r.error("Failed to create context menu:",e)}}chrome.contextMenus.onClicked.addListener(async(e,t)=>{if(e.menuItemId===c)try{if(!(t!=null&&t.id))throw new Error("No active tab");const a=e.selectionText;if(!a||a.trim().length<10){r.warn("Selection too short or empty");return}await chrome.storage.local.set({currentSelection:{text:a.trim(),url:t.url||"",domain:new URL(t.url||"").hostname,timestamp:Date.now()}}),await chrome.tabs.sendMessage(t.id,{type:"CONTEXT_MENU_CLICKED",payload:{text:a.trim()}}),await s(t.id,a.trim()),i("context_menu_clicked",{text_length:a.length,domain:new URL(t.url||"").hostname}),r.info("Context menu handled")}catch(a){r.error("Failed to handle context menu click:",a)}});chrome.commands.onCommand.addListener(async e=>{if(e==="simplify-selection")try{const[t]=await chrome.tabs.query({active:!0,currentWindow:!0});if(!(t!=null&&t.id))throw new Error("No active tab");const a=await chrome.tabs.sendMessage(t.id,{type:"GET_CURRENT_SELECTION"}),o=a==null?void 0:a.text;if(!o||o.length<10){r.warn("No valid selection for keyboard shortcut");return}await s(t.id,o),i("keyboard_shortcut_used",{text_length:o.length}),r.info("Keyboard shortcut handled")}catch(t){r.error("Failed to handle keyboard command:",t)}});async function s(e,t){try{const{auth:a}=await chrome.storage.local.get("auth");if(!(a!=null&&a.accessToken)){r.info("User not authenticated, showing auth prompt"),await chrome.tabs.create({url:"https://stupify.ai/login?ref=extension"});return}await chrome.storage.local.set({pendingExplanation:{text:t,timestamp:Date.now()}}),await chrome.sidePanel.open({tabId:e}),r.info("Side panel opened")}catch(a){r.error("Failed to open side panel:",a)}}chrome.runtime.onMessage.addListener((e,t,a)=>{var o;switch(r.debug("Message received:",e.type),e.type){case"OPEN_SIDE_PANEL":return f(e.payload,(o=t.tab)==null?void 0:o.id).then(()=>a({success:!0})).catch(n=>{r.error("Failed to open side panel:",n),a({success:!1,error:n.message})}),!0;case"TRACK_EVENT":return i(e.payload.event,e.payload.properties),a({success:!0}),!1;case"GET_AUTH_STATE":return g().then(n=>a({auth:n})).catch(n=>{r.error("Failed to get auth state:",n),a({auth:null})}),!0;case"SET_AUTH_STATE":return p(e.payload).then(()=>a({success:!0})).catch(n=>{r.error("Failed to set auth state:",n),a({success:!1,error:n.message})}),!0;case"CLEAR_AUTH_STATE":return y().then(()=>a({success:!0})).catch(n=>{r.error("Failed to clear auth state:",n),a({success:!1,error:n.message})}),!0;default:return r.warn("Unknown message type:",e.type),a({success:!1,error:"Unknown message type"}),!1}});async function f(e,t){if(!t)throw new Error("No tab ID provided");await s(t,e.text)}async function g(){const{auth:e}=await chrome.storage.local.get("auth");return e||null}async function p(e){await chrome.storage.local.set({auth:e}),r.info("Auth state updated")}async function y(){await chrome.storage.local.remove("auth"),r.info("Auth state cleared")}async function i(e,t){try{let{analyticsId:a}=await chrome.storage.local.get("analyticsId");a||(a=`ext_${Date.now()}_${Math.random().toString(36).substring(7)}`,await chrome.storage.local.set({analyticsId:a}));const{eventQueue:o=[]}=await chrome.storage.local.get("eventQueue");o.push({event:e,properties:{...t,timestamp:Date.now(),user_id:a,extension_version:chrome.runtime.getManifest().version}}),o.length>100&&o.shift(),await chrome.storage.local.set({eventQueue:o}),r.debug("Event tracked:",e),l().catch(n=>{r.debug("Failed to flush event queue:",n)})}catch(a){r.error("Failed to track event:",a)}}async function l(){try{const{eventQueue:e=[],auth:t}=await chrome.storage.local.get(["eventQueue","auth"]);if(e.length===0)return;(await fetch("https://stupify.ai/api/analytics/events",{method:"POST",headers:{"Content-Type":"application/json",...(t==null?void 0:t.accessToken)&&{Authorization:`Bearer ${t.accessToken}`}},body:JSON.stringify({events:e})})).ok&&(await chrome.storage.local.set({eventQueue:[]}),r.debug("Event queue flushed"))}catch(e){r.debug("Failed to flush event queue:",e)}}setInterval(()=>{l().catch(()=>{})},5*60*1e3);export{y as clearAuthState,m as createContextMenu,g as getAuthState,s as openSidePanel,p as setAuthState,i as trackEvent};
