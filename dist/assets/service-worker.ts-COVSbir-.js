import{l as a}from"./utils-edMwt5UB.js";const c="stupify-simplify-text";chrome.runtime.onInstalled.addListener(e=>{a.info("Extension installed:",e.reason),e.reason==="install"?u():e.reason==="update"&&h(e.previousVersion),m()});async function u(){try{await chrome.storage.local.set({settings:{defaultComplexity:"normal",autoOpenSidePanel:!0,keyboardShortcutEnabled:!0,theme:"light"},stats:{installDate:Date.now(),totalExplanations:0,lastUsed:null},onboarding:{completed:!1,currentStep:0}}),chrome.tabs.create({url:chrome.runtime.getURL("onboarding.html")}),i("extension_installed",{version:chrome.runtime.getManifest().version}),a.info("First install setup complete")}catch(e){a.error("Failed to handle first install:",e)}}async function h(e){try{const t=chrome.runtime.getManifest().version;a.info("Extension updated:",{from:e,to:t}),i("extension_updated",{from_version:e,to_version:t}),e&&await d(e,t)}catch(t){a.error("Failed to handle update:",t)}}async function d(e,t){a.info("Running migrations:",{fromVersion:e,toVersion:t})}function m(){try{chrome.contextMenus.remove(c,()=>{chrome.runtime.lastError}),chrome.contextMenus.create({id:c,title:"Simplify with Stupify",contexts:["selection"],documentUrlPatterns:["http://*/*","https://*/*"]}),a.info("Context menu created")}catch(e){a.error("Failed to create context menu:",e)}}chrome.contextMenus.onClicked.addListener(async(e,t)=>{if(e.menuItemId===c)try{if(!(t!=null&&t.id))throw new Error("No active tab");const r=e.selectionText;if(!r||r.trim().length<10){a.warn("Selection too short or empty");return}await chrome.storage.local.set({currentSelection:{text:r.trim(),url:t.url||"",domain:new URL(t.url||"").hostname,timestamp:Date.now()}}),await chrome.tabs.sendMessage(t.id,{type:"CONTEXT_MENU_CLICKED",payload:{text:r.trim()}}),await s(t.id,r.trim()),i("context_menu_clicked",{text_length:r.length,domain:new URL(t.url||"").hostname}),a.info("Context menu handled")}catch(r){a.error("Failed to handle context menu click:",r)}});chrome.commands.onCommand.addListener(async e=>{if(e==="simplify-selection")try{const[t]=await chrome.tabs.query({active:!0,currentWindow:!0});if(!(t!=null&&t.id))throw new Error("No active tab");const r=await chrome.tabs.sendMessage(t.id,{type:"GET_CURRENT_SELECTION"}),o=r==null?void 0:r.text;if(!o||o.length<10){a.warn("No valid selection for keyboard shortcut");return}await s(t.id,o),i("keyboard_shortcut_used",{text_length:o.length}),a.info("Keyboard shortcut handled")}catch(t){a.error("Failed to handle keyboard command:",t)}});async function s(e,t){a.info("Opening side panel for tab:",e);try{chrome.storage.local.set({pendingExplanation:{text:t,timestamp:Date.now()}}).catch(r=>{a.error("Failed to store pending explanation:",r)}),await chrome.sidePanel.open({tabId:e}),a.info("✅ Side panel opened successfully"),i("side_panel_opened",{text_length:t.length})}catch(r){a.error("❌ Failed to open side panel:",r),a.warn("User gesture may have been lost. User should try again.")}}chrome.runtime.onMessage.addListener((e,t,r)=>{var o;switch(a.debug("Message received:",e.type),e.type){case"OPEN_SIDE_PANEL":return f(e.payload,(o=t.tab)==null?void 0:o.id).then(()=>r({success:!0})).catch(n=>{a.error("Failed to open side panel:",n),r({success:!1,error:n.message})}),!0;case"TRACK_EVENT":return i(e.payload.event,e.payload.properties),r({success:!0}),!1;case"GET_AUTH_STATE":return p().then(n=>r({auth:n})).catch(n=>{a.error("Failed to get auth state:",n),r({auth:null})}),!0;case"SET_AUTH_STATE":return g(e.payload).then(()=>r({success:!0})).catch(n=>{a.error("Failed to set auth state:",n),r({success:!1,error:n.message})}),!0;case"CLEAR_AUTH_STATE":return y().then(()=>r({success:!0})).catch(n=>{a.error("Failed to clear auth state:",n),r({success:!1,error:n.message})}),!0;default:return a.warn("Unknown message type:",e.type),r({success:!1,error:"Unknown message type"}),!1}});async function f(e,t){if(!t)throw new Error("No tab ID provided");await s(t,e.text)}async function p(){const{auth:e}=await chrome.storage.local.get("auth");return e||null}async function g(e){await chrome.storage.local.set({auth:e}),a.info("Auth state updated")}async function y(){await chrome.storage.local.remove("auth"),a.info("Auth state cleared")}async function i(e,t){try{let{analyticsId:r}=await chrome.storage.local.get("analyticsId");r||(r=`ext_${Date.now()}_${Math.random().toString(36).substring(7)}`,await chrome.storage.local.set({analyticsId:r}));const{eventQueue:o=[]}=await chrome.storage.local.get("eventQueue");o.push({event:e,properties:{...t,timestamp:Date.now(),user_id:r,extension_version:chrome.runtime.getManifest().version}}),o.length>100&&o.shift(),await chrome.storage.local.set({eventQueue:o}),a.debug("Event tracked:",e),l().catch(n=>{a.debug("Failed to flush event queue:",n)})}catch(r){a.error("Failed to track event:",r)}}async function l(){try{const{eventQueue:e=[],auth:t}=await chrome.storage.local.get(["eventQueue","auth"]);if(e.length===0)return;(await fetch("https://stupify.app/api/analytics/events",{method:"POST",headers:{"Content-Type":"application/json",...(t==null?void 0:t.accessToken)&&{Authorization:`Bearer ${t.accessToken}`}},body:JSON.stringify({events:e})})).ok&&(await chrome.storage.local.set({eventQueue:[]}),a.debug("Event queue flushed"))}catch(e){a.debug("Failed to flush event queue:",e)}}setInterval(()=>{l().catch(()=>{})},5*60*1e3);export{y as clearAuthState,m as createContextMenu,p as getAuthState,s as openSidePanel,g as setAuthState,i as trackEvent};
